from config import bot
import telebot
import requests
from telebot import types
bot = telebot.TeleBot(bot)
@bot.message_handler(commands=['start'])
def start(message):
    if message.text.lower() == '/start':
        file = open('pic.jpg', 'rb')
        bot.send_photo(message.chat.id, file)
        bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name},'
                                          f' –≤–∞—Å –ø—Ä–∏–≤–µ—Å—Ç–≤—É–µ—Ç –ë–æ—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã.üíµ\n'
                                          f'–Ø –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–º–∏ –≤–∞–ª—é—Ç—É –≤ –Ω—É–∂–Ω—ã–π —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç. –í—ã–±–∏—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –≤–∞–ª—é—Ç—É –Ω–∏–∂–µ.')
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–Æ–∞–Ω–∏üí¥')
        btn2 = types.KeyboardButton('–ï–≤—Ä–æüí∂')
        btn3 = types.KeyboardButton('–î–æ–ª–ª–∞—Ä—ãüíµ')
        btn4 = types.KeyboardButton('Bitcoinüí±')
        btn5 = types.KeyboardButton('–§—É–Ω—Ç—ãüí∑')
        btn6 = types.KeyboardButton('–†—É–±–ª–∏üí∞')
        markup.add( btn1, btn2, btn3, btn4, btn5, btn6)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:', reply_markup=markup)
        bot.register_next_step_handler(message, on_click)
def on_click(message):
    if message.text == '–Æ–∞–Ω–∏üí¥':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1)
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é –≤–∞–ª—é—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ —Å—É–º–º—É. –ü—Ä–∏–º–µ—Ä: USD 100*', reply_markup=markup)
        bot.register_next_step_handler(message, convert_cny)
        bot.register_next_step_handler(message, on_back_button_click)

    elif message.text == '–ï–≤—Ä–æüí∂':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1)
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é –≤–∞–ª—é—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ —Å—É–º–º—É. –ü—Ä–∏–º–µ—Ä: USD 100*', reply_markup=markup)
        bot.register_next_step_handler(message, convert_eur)
        bot.register_next_step_handler(message, on_back_button_click)

    elif message.text == '–î–æ–ª–ª–∞—Ä—ãüíµ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1)
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é –≤–∞–ª—é—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ —Å—É–º–º—É. –ü—Ä–∏–º–µ—Ä: USD 100*', reply_markup=markup)
        bot.register_next_step_handler(message, convert_usd)
        bot.register_next_step_handler(message, on_back_button_click)
    elif message.text == '/help':
        bot.send_message(message.chat.id, f'–î–∞–Ω–Ω—ã–π –±–æ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤–∞–ª—é—Ç—É –≤ —Ä—É–±–ª–∏.\n'
                                          f'–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–ª—é—Ç—É –Ω–∞–∂–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.'
                                          f'–î–∞–ª–µ–µ –≤–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –≤–∞–ª—é—Ç—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ —Å—É–º–º—É.\n'
                                          f'–ü—Ä–∏–º–µ—Ä: "EUR 1000"')
        bot.register_next_step_handler(message, on_click)
    elif message.text == 'Bitcoinüí±':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1)
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é –≤–∞–ª—é—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ —Å—É–º–º—É. –ü—Ä–∏–º–µ—Ä: USD 100*',
                         reply_markup=markup)
        bot.register_next_step_handler(message, convert_btc)
        bot.register_next_step_handler(message, on_back_button_click)
    elif message.text == '–§—É–Ω—Ç—ãüí∑':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1)
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é –≤–∞–ª—é—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ —Å—É–º–º—É. –ü—Ä–∏–º–µ—Ä: USD 100*',
                         reply_markup=markup)
        bot.register_next_step_handler(message, convert_gbp)
        bot.register_next_step_handler(message, on_back_button_click)
    elif message.text == '–†—É–±–ª–∏üí∞':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1)
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é –≤–∞–ª—é—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ —Å—É–º–º—É. –ü—Ä–∏–º–µ—Ä: USD 100*',
                         reply_markup=markup)
        bot.register_next_step_handler(message, convert_rub)
        bot.register_next_step_handler(message, on_back_button_click)



    else:
        bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –≤–≤–æ–¥ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
        bot.register_next_step_handler(message, on_click)
@bot.message_handler()
def on_back_button_click(message):
    if message.text == '–ù–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–Æ–∞–Ω–∏üí¥')
        btn2 = types.KeyboardButton('–ï–≤—Ä–æüí∂')
        btn3 = types.KeyboardButton('–î–æ–ª–ª–∞—Ä—ãüíµ')
        btn4 = types.KeyboardButton('Bitcoinüí±')
        btn5 = types.KeyboardButton('–§—É–Ω—Ç—ãüí∑')
        btn6 = types.KeyboardButton('–†—É–±–ª–∏üí∞')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:', reply_markup=markup)
        bot.register_next_step_handler(message, on_click)

@bot.message_handler()
def convert_usd(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1)
    try:
        base, amount = message.text.split(' ')
        response = requests.get(f'https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms={base}')
        exchange_rate = response.json()[base]
        amount_rub = float(amount) * exchange_rate
        bot.send_message(message.chat.id, f'–°—É–º–º–∞ –≤ {base}: {amount_rub}')
        bot.register_next_step_handler(message, on_back_button_click)
    except ValueError:
            bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
            bot.register_next_step_handler(message, convert_usd)
def convert_eur(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1)
    try:
        base, amount = message.text.split(' ')
        response = requests.get(f'https://min-api.cryptocompare.com/data/price?fsym=EUR&tsyms={base}')
        exchange_rate = response.json()[base]
        amount_rub = float(amount) * exchange_rate
        bot.send_message(message.chat.id, f'–°—É–º–º–∞ –≤ {base}: {amount_rub}')
        bot.register_next_step_handler(message, on_back_button_click)
    except ValueError:
        bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        bot.register_next_step_handler(message, convert_eur)
def convert_cny(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add()
    try:
        base, amount = message.text.split(' ')
        response = requests.get(f'https://min-api.cryptocompare.com/data/price?fsym=CNY&tsyms={base}')
        exchange_rate = response.json()[base]
        amount_rub = float(amount) * exchange_rate
        bot.send_message(message.chat.id, f'–°—É–º–º–∞ –≤ {base}: {amount_rub}')
        bot.register_next_step_handler(message, on_back_button_click)
    except ValueError:
        bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        bot.register_next_step_handler(message, convert_cny)

def convert_btc(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1)
    try:
        base, amount = message.text.split(' ')
        response = requests.get(f'https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms={base}')
        exchange_rate = response.json()[base]
        amount_rub = float(amount) * exchange_rate
        bot.send_message(message.chat.id, f'–°—É–º–º–∞ –≤ {base}: {amount_rub}')
        bot.register_next_step_handler(message, on_back_button_click)
    except ValueError:
            bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
            bot.register_next_step_handler(message, convert_usd)

def convert_gbp(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1)
    try:
        base, amount = message.text.split(' ')
        response = requests.get(f'https://min-api.cryptocompare.com/data/price?fsym=GBP&tsyms={base}')
        exchange_rate = response.json()[base]
        amount_rub = float(amount) * exchange_rate
        bot.send_message(message.chat.id, f'–°—É–º–º–∞ –≤ {base}: {amount_rub}')
        bot.register_next_step_handler(message, on_back_button_click)
    except ValueError:
            bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
            bot.register_next_step_handler(message, convert_usd)
def convert_rub(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1)
    try:
        base, amount = message.text.split(' ')
        response = requests.get(f'https://min-api.cryptocompare.com/data/price?fsym=RUB&tsyms={base}')
        exchange_rate = response.json()[base]
        amount_rub = float(amount) * exchange_rate
        bot.send_message(message.chat.id, f'–°—É–º–º–∞ –≤ {base}: {amount_rub}')
        bot.register_next_step_handler(message, on_back_button_click)
    except ValueError:
            bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
            bot.register_next_step_handler(message, convert_usd)

bot.polling(none_stop=True)